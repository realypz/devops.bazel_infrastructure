load("@bazel_skylib//lib:paths.bzl", "paths")
load("//toolchains/cpp/build_tools:llvm_dir.bzl", "LLVM_TOOLCHAIN_DICT")
load("//toolchains/cpp/format:clang_format.bzl", "clang_format_check")

# This rule creates a symlink to the clang-format binary in the LLVM toolchain.
#   Do this beacuse the clang-format binary is outside the workspace and we need
#   to reference it in the clang_format_check rule.
genrule(
    name = "_clang-format-symlink",
    srcs = [],
    outs = ["clang-format-symlink"],
    cmd =
        select(
            {
                "@platforms//os:macos": "ln -s {} $(OUTS)".format(
                    paths.join(
                        LLVM_TOOLCHAIN_DICT["macosx"]["llvm_dir"],
                        "bin/clang-format",
                    ),
                ),
                "@platforms//os:linux": "ln -s {} $(OUTS)".format(
                    paths.join(
                        LLVM_TOOLCHAIN_DICT["linux"]["llvm_dir"],
                        "bin/clang-format",
                    ),
                ),
            },
        ),  # $(OUTS) refers to "outs" attribute
    executable = True,
)

clang_format_check(
    name = "clang_format_fix",
    clang_format_binary = ":_clang-format-symlink",
    mode = "fix",
    visibility = ["//visibility:public"],
)

clang_format_check(
    name = "clang_format_diff",
    clang_format_binary = ":_clang-format-symlink",
    mode = "diff",
    visibility = ["//visibility:public"],
)
