name: Bazel Build and Test

on:
    pull_request:
        branches:
            - main

jobs:
    build-and-test-macos-aarch64:
        runs-on: macos-14
        steps:
          - uses: actions/checkout@v2
          - uses: bazel-contrib/setup-bazel@0.8.1
            with:
                # Avoid downloading Bazel every time.
                bazelisk-cache: true
                # Store build cache per workflow.
                disk-cache: ${{ github.workflow }}
                # Share repository cache between workflows.
                repository-cache: true
          - uses: tecolicom/actions-use-homebrew-tools@v1
            with:
                # homebrew packages
                tools: 'llvm@18'
            
                # Cache strategy
                #
                # yes:      activate cache
                # no:       no cache
                # workflow: effective within same workflow (mainly for test)
                #
                cache: yes
            
                # Additional cache key
                key: ''

          - name: Build all targets with llvm toolchain
            working-directory: tests/
            run: |
              bazelisk build --config=llvm_toolchain //...
              bazelisk test --config=llvm_toolchain //...
              bazelisk build --config=clang_tidy //cpp/my_hello:hello
              # bazelisk run //external_toolchains:clang_format_fix # disabled because it fails in github actions

          - name: Run buildifier fix
            working-directory: tests/
            run: bazelisk run //external_toolchains:bazel_buildifier_fix

          - name: Run header guard fix
            working-directory: tests/
            run: bazelisk run //external_toolchains:header_guard -- --workspace-root=$(pwd)

          - name: Run python black fix
            working-directory: tests/
            run: bazelisk run //external_toolchains:python_black

    # TODO: The following code is not working yet, could possibly due to the apt-get does not install all
    #     the necessary packages.
    
    # build-and-test-ubuntu-x86_64:
    #     runs-on: ubuntu-22.04
    #     steps:
    #       - uses: actions/checkout@v2
    #       - uses: bazel-contrib/setup-bazel@0.8.1
    #         with:
    #             # Avoid downloading Bazel every time.
    #             bazelisk-cache: true
    #             # Store build cache per workflow.
    #             disk-cache: ${{ github.workflow }}
    #             # Share repository cache between workflows.
    #             repository-cache: true

    #       # Install llvm before the real tests.
    #       - run: wget https://apt.llvm.org/llvm.sh -P /tmp
    #       - run: chmod +x /tmp/llvm.sh
    #       - run: sudo /tmp/llvm.sh 18 all
    #       # TODO: Why still need install the things below, given "all" is used in the previous command?
    #       - run: sudo apt-get install libc++-18-dev libc++abi-18-dev libunwind-18-dev libclang-rt-18-dev

    #       # Run the tests.
    #       - name: Build all targets with llvm toolchain
    #         working-directory: tests/
    #         run: bazelisk build --config=llvm_toolchain //...

    #       - name: Run all test targets with llvm toolchain
    #         working-directory: tests/
    #         run: bazelisk test --config=llvm_toolchain //...

    #       - name: Build hello target with clang-tidy
    #         working-directory: tests/
    #         run: bazelisk build --config=clang_tidy //cpp/my_hello:hello

    #       - name: Run buildifier fix
    #         working-directory: tests/
    #         run: bazelisk run //external_toolchains:bazel_buildifier_fix

    #       - name: Run clang-format fix
    #         working-directory: tests/
    #         run: bazelisk run //external_toolchains:clang_format_fix

    #       - name: Run header guard fix
    #         working-directory: tests/
    #         run: bazelisk run //external_toolchains:header_guard -- --workspace-root=$(pwd)

    #       - name: Run python black fix
    #         working-directory: tests/
    #         run: bazelisk run //external_toolchains:python_black

    # TODO: Consider how to cache the fetched llvm toolchain.
    # format-check:
    #     runs-on: ubuntu-22.04
    #     steps:
    #         - uses: actions/checkout@v2
    #         - uses: bazel-contrib/setup-bazel@0.8.1
    #           with:
    #               # Avoid downloading Bazel every time.
    #               bazelisk-cache: true
    #               # Store build cache per workflow.
    #               disk-cache: ${{ github.workflow }}
    #               # Share repository cache between workflows.
    #               repository-cache: true
    #         - run: wget https://apt.llvm.org/llvm.sh
    #         - run: chmod +x llvm.sh
    #         - run: sudo ./llvm.sh 18 all
    #         - run: bash toolchains/format/format_all.sh
